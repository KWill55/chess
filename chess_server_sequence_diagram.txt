actor Client
participant Server
participant Handler
participant Service
participant DataAccess
database db

entryspacing 0.8



group #navy Registration #white
Client -> Server: [POST] /user\n{"username":" ", "password":" ", "email":" "}
Server -> Handler: {"username":" ", "password":" ", "email":" "}
Handler -> Service: register(RegisterRequest)
Service -> DataAccess: getUser(username)
DataAccess -> db:Find UserData by username
DataAccess --> Service: null
Service -> DataAccess:createUser(userData)
DataAccess -> db:Add UserData
Service -> DataAccess:createAuth(authData)
DataAccess -> db:Add AuthData
Service --> Handler: RegisterResult
Handler --> Server: {"username" : " ", "authToken" : " "}
Server --> Client: 200\n{"username" : " ", "authToken" : " "}
end



group #orange Login #white
Client -> Server: [POST] /session\n{ "username":"", "password":"" }
Server -> Handler: { "username":"", "password":"" }
Handler -> Service: login(LoginRequest)
Service -> DataAccess: getUser(username)
DataAccess -> db: Find UserData by username
Service -> DataAccess: getAuth(username)
DataAccess -> db: Find AuthData by username
Service --> Handler: LoginResult
Handler --> Server: {"username" : " ", "authToken" : " "}
Server --> Client: 200\n{"username" : " ", "authToken" : " "}
end


group #green Logout #white
Client -> Server: [DELETE] /session\n authorization: <authToken>
Server -> Handler: authorization: <authToken>
Handler -> Service: logout(LogoutRequest)
Service -> DataAccess: deleteAuth(authToken)
DataAccess -> db: Delete AuthData by authToken
Service --> Handler:LogoutResult
Handler --> Server: {}
Server --> Client: 200\n{}
end


group #red List Games #white
Client -> Server: [GET] /game\nauthorization: <authToken>
Server -> Handler: authorization: <authToken>
Handler -> Service: list(ListRequest)
Service -> DataAccess: listGames()
DataAccess -> db: Find GameData for all games
Service --> Handler: ListResult
Handler --> Server: {"games": [{"gameID": 1234, "whiteUsername":"", "blackUsername":"", "gameName:""}
Server --> Client: 200\n{"games": [{"gameID": 1234, "whiteUsername":"", "blackUsername":"", "gameName:""} ]}
end



group #purple Create Game #white
Client -> Server: [POST] /game\n<authToken>\n{ "gameName":"" }
Server -> Handler: <authToken>\n{ "gameName":"" }
Handler -> Service: game(createRequest)
Service -> DataAccess: createGame(gameName)
DataAccess -> db: Add GameData by gameName
Service --> Handler: CreateResult
Handler --> Server: {"gameID": 1234}
Server --> Client: 200\n{"gameID": 1234}
end



group #yellow Join Game #black
Client -> Server: [PUT] /game\nauthorization: <authToken>\n{ "playerColor":"WHITE/BLACK", "gameID": 1234 }
Server -> Handler:<authToken>\n{ "playerColor":"WHITE/BLACK", "gameID": 1234 }
Handler -> Service: join(JoinRequest)
Service -> DataAccess: getGame(gameID)
DataAccess -> db: Find GameData by gameID
Service -> DataAccess: updateGame(gameID)
DataAccess -> db: Add GameData by gameID
Service --> Handler: JoinResult
Handler --> Server: {}
Server --> Client: 200\n{}
end



group #gray Clear application #white
Client -> Server: [DELETE] /db \n{}
Server -> Handler: {}
Handler -> Service:{}
Service -> DataAccess: clear()
DataAccess -> db: Delete GameData
DataAccess -> db: Delete UserData
DataAccess -> db: Delete AuthData
Service --> Handler: {}
Handler --> Server: {}
Server --> Client: 200\n{}
end
